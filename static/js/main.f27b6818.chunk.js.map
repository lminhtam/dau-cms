{"version":3,"sources":["ultis/functions.js","components/GlobalModal/index.js","pages/Home/component/searchInput.js","pages/Home/home.page.js","App.js","reportWebVitals.js","index.js","firebaseConfig.js"],"names":["MODAL_TYPE","createHashHistory","forceRefresh","Text","Typography","GlobalModal","props","closeModal","instance","setState","isShow","handleOk","state","onPress","handleCancel","title","content","type","visible","centered","onOk","onCancel","footer","onClick","size","React","Component","alertMessage","iTitle","iContent","iType","getColumnSearchProps","dataIndex","searchPlaceholder","searchText","setSearchText","searchedColumn","setSearchColumn","refInput","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","icon","SearchOutlined","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","current","select","render","text","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","Home","useState","isAuth","setIsAuth","pass","setPass","tickets","setTickets","useRef","useEffect","firebase","database","on","snapshot","data","val","ticketsArray","Object","keys","map","key","id","off","onInputPass","md5","downloadQR","pngUrl","document","getElementById","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","ticketColumns","sorter","a","b","ticketId","localeCompare","date","moment","format","checked","enable","child","update","catch","error","handleEnable","DownloadOutlined","fontSize","handleDownload","DeleteOutlined","remove","handleDelete","flexDirection","flex","level","PlusCircleOutlined","now","Date","getTime","uuidv4","values","push","then","onAddNewTicket","columns","dataSource","justifyContent","alignItems","marginTop","event","onKeyPress","length","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f27b6818.chunk.js","sourcesContent":["import { createHashHistory } from 'history'\r\n\r\nexport const history = createHashHistory({ forceRefresh: true })\r\n\r\nexport const PASS = '139f3d56ee09b7df537bf53a1ca5175f'\r\n\r\nexport const MODAL_TYPE = {\r\n  NORMAL: 'NORMAL',\r\n  CHOICE: 'CHOICE'\r\n}\r\n","import { Button, Modal, Typography } from 'antd'\r\nimport React from 'react'\r\nimport { MODAL_TYPE } from 'ultis/functions'\r\n\r\nconst { Text } = Typography\r\n\r\nexport default class GlobalModal extends React.Component {\r\n  static instance = null\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    GlobalModal.instance = this\r\n    this.state = {\r\n      isShow: false,\r\n      title: '',\r\n      content: '',\r\n      type: MODAL_TYPE.NORMAL,\r\n      onPress: () => {}\r\n    }\r\n  }\r\n\r\n  static alertMessage = (\r\n    iTitle = 'Thông báo',\r\n    iContent = 'Đã xảy ra lỗi',\r\n    iType = MODAL_TYPE.NORMAL,\r\n    onPress = () => {}\r\n  ) => {\r\n    GlobalModal.instance.setState({\r\n      isShow: true,\r\n      title: iTitle,\r\n      content: iContent,\r\n      type: iType,\r\n      onPress\r\n    })\r\n  }\r\n\r\n  closeModal = () => {\r\n    GlobalModal.instance.setState({ isShow: false })\r\n  }\r\n\r\n  handleOk = () => {\r\n    GlobalModal.instance.state.onPress()\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  handleCancel = () => {\r\n    GlobalModal.instance.closeModal()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Modal\r\n        title={GlobalModal.instance.state.title}\r\n        visible={GlobalModal.instance.state.isShow}\r\n        centered\r\n        onOk={GlobalModal.instance.handleOk}\r\n        onCancel={GlobalModal.instance.handleCancel}\r\n        footer={\r\n          GlobalModal.instance.state.type === MODAL_TYPE.NORMAL\r\n            ? [\r\n                <Button\r\n                  key=\"okButton\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                  size=\"large\"\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n            : [\r\n                <Button\r\n                  key=\"cancelButton\"\r\n                  onClick={GlobalModal.instance.handleCancel}\r\n                  size=\"large\"\r\n                >\r\n                  Hủy\r\n                </Button>,\r\n                <Button\r\n                  key=\"okButton\"\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  onClick={GlobalModal.instance.handleOk}\r\n                >\r\n                  OK\r\n                </Button>\r\n              ]\r\n        }\r\n      >\r\n        <Text>{GlobalModal.instance.state.content}</Text>\r\n      </Modal>\r\n    )\r\n  }\r\n}\r\n","import { SearchOutlined } from '@ant-design/icons'\r\nimport { Button, Input, Space } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport React from 'react'\r\nimport Highlighter from 'react-highlight-words'\r\n\r\nexport const getColumnSearchProps = (\r\n  dataIndex,\r\n  searchPlaceholder,\r\n  searchText,\r\n  setSearchText,\r\n  searchedColumn,\r\n  setSearchColumn,\r\n  refInput\r\n) => {\r\n  return {\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={refInput}\r\n          placeholder={searchPlaceholder}\r\n          value={selectedKeys[0]}\r\n          onChange={e =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            handleSearch(\r\n              selectedKeys,\r\n              confirm,\r\n              dataIndex,\r\n              setSearchText,\r\n              setSearchColumn\r\n            )\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() =>\r\n              handleSearch(\r\n                selectedKeys,\r\n                confirm,\r\n                dataIndex,\r\n                setSearchText,\r\n                setSearchColumn\r\n              )\r\n            }\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Tìm\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleReset(clearFilters, setSearchText)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Cài lại\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => (\r\n      <SearchOutlined style={{ color: filtered ? 'grey' : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => refInput.current.select())\r\n      }\r\n    },\r\n    render: text =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text.toString()}\r\n        />\r\n      ) : (\r\n        text\r\n      )\r\n  }\r\n}\r\n\r\nconst handleSearch = (\r\n  selectedKeys,\r\n  confirm,\r\n  dataIndex,\r\n  setSearchText,\r\n  setSearchColumn\r\n) => {\r\n  confirm()\r\n  setSearchColumn(dataIndex)\r\n  setSearchText(selectedKeys[0])\r\n}\r\n\r\nconst handleReset = (clearFilters, setSearchText) => {\r\n  clearFilters()\r\n  setSearchText('')\r\n}\r\n","import {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  PlusCircleOutlined\r\n} from '@ant-design/icons'\r\nimport { Button, Input, Space, Switch, Table } from 'antd'\r\nimport Text from 'antd/lib/typography/Text'\r\nimport Title from 'antd/lib/typography/Title'\r\nimport GlobalModal from 'components/GlobalModal'\r\nimport firebase from 'firebase'\r\nimport md5 from 'md5'\r\nimport moment from 'moment'\r\nimport * as QRCode from 'qrcode.react'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport { MODAL_TYPE, PASS } from 'ultis/functions'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { getColumnSearchProps } from './component/searchInput'\r\n\r\nfunction Home(props) {\r\n  const [isAuth, setIsAuth] = useState(false)\r\n  const [pass, setPass] = useState('')\r\n  const [tickets, setTickets] = useState([])\r\n  const [searchText, setSearchText] = useState('')\r\n  const [searchedColumn, setSearchColumn] = useState('')\r\n  const refInput = useRef()\r\n\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      firebase\r\n        .database()\r\n        .ref('/tickets')\r\n        .on('value', snapshot => {\r\n          const data = snapshot.val()\r\n          const ticketsArray = Object.keys(data).map(key => {\r\n            return {\r\n              ...data[key],\r\n              id: key\r\n            }\r\n          })\r\n          setTickets(ticketsArray)\r\n        })\r\n    }\r\n    return () => {\r\n      firebase.database().ref('/tickets').off()\r\n    }\r\n  }, [isAuth])\r\n\r\n  const handleKeyPress = event => {\r\n    if (pass.length > 0 && event.key === 'Enter') {\r\n      onInputPass()\r\n    }\r\n  }\r\n\r\n  const onInputPass = () => {\r\n    if (md5(pass) === PASS) {\r\n      setIsAuth(true)\r\n    } else {\r\n      GlobalModal.alertMessage('Thông báo', 'Sai mật khẩu')\r\n    }\r\n  }\r\n\r\n  const downloadQR = id => {\r\n    const canvas = document.getElementById(id)\r\n    const pngUrl = canvas\r\n      .toDataURL('image/jpg')\r\n      .replace('image/jpg', 'image/octet-stream')\r\n    let downloadLink = document.createElement('a')\r\n    downloadLink.href = pngUrl\r\n    downloadLink.download = `${id}.jpg`\r\n    document.body.appendChild(downloadLink)\r\n    downloadLink.click()\r\n    document.body.removeChild(downloadLink)\r\n  }\r\n\r\n  const onAddNewTicket = () => {\r\n    const now = new Date().getTime()\r\n    const ticketId = uuidv4()\r\n    const values = {\r\n      ticketId,\r\n      date: now,\r\n      enable: true\r\n    }\r\n    firebase\r\n      .database()\r\n      .ref('/tickets')\r\n      .push(values)\r\n      .then(value => {\r\n        setTimeout(() => {\r\n          downloadQR(ticketId)\r\n        }, 1000)\r\n      })\r\n      .catch(error => GlobalModal.alertMessage())\r\n  }\r\n\r\n  const handleDelete = record => {\r\n    GlobalModal.alertMessage(\r\n      'Xác nhận',\r\n      'Chắc chắn xóa vé này?',\r\n      MODAL_TYPE.CHOICE,\r\n      () => {\r\n        firebase\r\n          .database()\r\n          .ref('/tickets')\r\n          .child(record.id)\r\n          .remove()\r\n          .catch(error => GlobalModal.alertMessage())\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleEnable = (record, checked) => {\r\n    GlobalModal.alertMessage(\r\n      'Xác nhận',\r\n      record.enable ? 'Chắc chắn vô hiệu vé này?' : 'Chắc chắn mở khóa vé này?',\r\n      MODAL_TYPE.CHOICE,\r\n      () => {\r\n        firebase\r\n          .database()\r\n          .ref('/tickets')\r\n          .child(record.id)\r\n          .update({\r\n            ticketId: record.ticketId,\r\n            date: record.date,\r\n            enable: checked\r\n          })\r\n          .catch(error => GlobalModal.alertMessage())\r\n      }\r\n    )\r\n  }\r\n\r\n  const handleDownload = record => {\r\n    downloadQR(record.ticketId)\r\n  }\r\n\r\n  const ticketColumns = [\r\n    {\r\n      ...getColumnSearchProps(\r\n        'ticketId',\r\n        'Nhập ID',\r\n        searchText,\r\n        setSearchText,\r\n        searchedColumn,\r\n        setSearchColumn,\r\n        refInput\r\n      ),\r\n      title: 'ID',\r\n      dataIndex: 'ticketId',\r\n      key: 'ticketId',\r\n      sorter: (a, b) => a.ticketId.localeCompare(b.ticketId)\r\n    },\r\n    {\r\n      title: 'QR code',\r\n      key: 'qrcode',\r\n      render: (value, record) => {\r\n        return (\r\n          <QRCode\r\n            id={record.ticketId}\r\n            value={`${record.id}.${record.date}.${record.ticketId}`}\r\n          />\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Ngày tạo',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n      render: (value, record) => {\r\n        return <Text>{moment(value).format('DD/MM/YYYY')}</Text>\r\n      },\r\n      sorter: (a, b) => a.date > b.date\r\n    },\r\n    {\r\n      title: 'Vô hiệu hóa',\r\n      dataIndex: 'enable',\r\n      key: 'enable',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <Switch\r\n              checked={value}\r\n              onChange={checked => {\r\n                handleEnable(record, checked)\r\n              }}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: 'Tác vụ',\r\n      key: 'action',\r\n      render: (value, record) => {\r\n        return (\r\n          <Space>\r\n            <DownloadOutlined\r\n              style={{ fontSize: 20 }}\r\n              onClick={() => handleDownload(record)}\r\n            />\r\n            <DeleteOutlined\r\n              style={{ fontSize: 20, color: '#FF0000' }}\r\n              onClick={() => handleDelete(record)}\r\n            />\r\n          </Space>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n\r\n  if (!isAuth) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flex: 1,\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Title level={3} style={{ marginTop: 64 }}>\r\n          Nhập mật khẩu\r\n        </Title>\r\n        <Input\r\n          style={{ width: 200, marginBottom: 24, marginTop: 24 }}\r\n          onChange={event => setPass(event.target.value)}\r\n          placeholder=\"Nhập mật khẩu\"\r\n          value={pass}\r\n          type=\"password\"\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <Button type=\"primary\" onClick={onInputPass} size=\"large\">\r\n          Vào\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ display: 'flex', flexDirection: 'column', flex: 1, padding: 48 }}\r\n    >\r\n      <Title level={2}>Danh sách vé</Title>\r\n      <Button\r\n        type=\"primary\"\r\n        icon={<PlusCircleOutlined />}\r\n        style={{ width: 200, marginBottom: 32 }}\r\n        onClick={() => onAddNewTicket()}\r\n        size=\"large\"\r\n      >\r\n        Thêm vé mới\r\n      </Button>\r\n      <Table columns={ticketColumns} dataSource={tickets} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import Home from 'pages/Home/home.page'\nimport React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/\" component={Home} />\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { firebaseConfig } from './firebaseConfig'\nimport firebase from 'firebase'\nimport GlobalModal from 'components/GlobalModal'\n\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <GlobalModal />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","export const firebaseConfig = {\r\n  apiKey: \"AIzaSyCIbYZAKvEmY9ns42xafyV54BFU6qUCmKI\",\r\n  authDomain: \"dau-giau.firebaseapp.com\",\r\n  databaseURL: \"https://dau-giau.firebaseio.com\",\r\n  projectId: \"dau-giau\",\r\n  storageBucket: \"dau-giau.appspot.com\",\r\n  messagingSenderId: \"801715659405\",\r\n  appId: \"1:801715659405:web:cb3eecc4840cd11abaf8c4\",\r\n  measurementId: \"G-XCRXMT5JYZ\"\r\n};"],"sourceRoot":""}